use restaurants_new_york
db.restaurants.find().pretty()
db.restaurants.find( {} , {"restaurant_id" : 1, "name" : 1, "borough" : 1, "cuisine" : 1} ).pretty()
db.restaurants.find( {} , {"restaurant_id" : 1, "name" : 1, "borough" : 1, "cuisine" : 1, "_id": 0} ).pretty()
db.restaurants.find( {} , {"restaurant_id" : 1, "name" : 1, "borough" : 1, "address"  : {"zipcode" : 1}, "_id": 0} ).pretty()
db.restaurants.find( {"borough" : "Bronx"} ).pretty()
db.restaurants.find( {"borough" : "Bronx"} ).limit(5).pretty()
db.restaurants.find( {"borough" : "Bronx"} ).limit(5).skip(5).pretty()
db.restaurants.find({grades : { $elemMatch:{"score":{$gt : 90}}}}).pretty()//otra solución: db.restauratns.find({"grades.score":{$gt:90}})
db.restaurants.find( { grades: { $elemMatch: { score : {$gt: 90, $lt: 100 } } } } ).pretty()//otra solución: db.restaurants.find({"grades.score":{$gt:90, $lt: 100}})
db.restaurants.find( {"address.coord.0" : {$lt : -95.754168}}).pretty()
db.restaurants.find( {$and : [{"cuisine" : {$ne : "American "}}, {"address.coord.0" : {$lt : -65.754168}}, {"grades.score" : {$gt : 70}}]}).pretty()
db.restaurants.find( {"cuisine" : {$ne : "American "}, "address.coord.0" : {$lt : -65.754168}, "grades.score" : {$gt : 70}}).pretty()
db.restaurants.find( {$and : [{"cuisine" : {$ne : "American "}}, {"grades.grade" : "A"}, {"borough" : {$ne : "Brooklyn "}}]}).sort({cuisine : -1}).pretty()
db.restaurants.find( {"name" : { $regex: /^Wil.*/}}, {_id:0, restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()
db.restaurants.find( {"name" : { $regex: /.*ces$/}}, {_id:0, restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()
db.restaurants.find( {"name" : { $regex: /Reg/}}, {_id:0, restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()
db.restaurants.find( {"borough" : "Bronx" , "cuisine" : {$in : ["American" , "Chinese"]}}).pretty()
db.restaurants.find({$or: [{"borough": "Staten Island"}, {"borough": "Bronx"} , {"borough" : "Brooklyn"}, {"borough": "Queens"}]}, {_id:0, restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()//podría utilizar $in
db.restaurants.find( {"borough": {$nin: ["Staten Island","Queens","Bronx","Brooklyn"]}} , {_id:0, restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()
db.restaurants.find( {"grades.score": {$lte: 10} }, {_id:0, restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()
db.restaurants.find( { $nor: [ { "cuisine": ["American" , "Chinese" ] }, { "name": /^Wil.*/} ] },{_id:0, restaurant_id:1, name:1, borough:1, cuisine:1}).pretty()  
db.restaurants.find( {"grades" : {$elemMatch: {"grade":"A", "score":11, "date": ISODate("2014-08-11T00:00:00Z")}}}, {_id:0, restaurant_id:1, name:1, grades:1}).pretty()
db.restaurants.find( {$and: [{"grades.1.grade":"A"}, {"grades.1.score": 9} , {"grades.1.date": ISODate("2014-08-11T00:00:00Z")}]} , {_id:0, restaurant_id:1, name:1, grades:1}).pretty()
db.restaurants.find( {$and : [{"address.coord.1": {$gt : 42}},{"address.coord.1": {$lte : 52}}]}, {_id:0, restaurant_id:1, name:1, address:1}).pretty()
db.restaurants.find( {},{_id:0, name:1}).sort( {name: 1})
db.restaurants.find( {},{_id:0, name:1}).sort( {name: -1})
db.restaurants.find({}, {_id:0, cuisine:1, borough:1}).sort({cuisine: 1, borough: -1})
db.restaurants.find( {"address.street" :  { $exists : true } }, {_id:0, address:1}).pretty()
db.restaurants.find({"address.coord": {$type: "double"}}, {_id:0, address:1}).pretty()
db.restaurants.find({ "grades.score": { $mod: [ 7, 0 ] } }, {_id:0, restaurant_id:1, name:1, grades:1}).pretty()
db.restaurants.find({"name": {$regex: /mon/}}, {_id:0, name:1, borough:1, "address.coord":1, cuisine:1}).pretty()
db.restaurants.find({"name": {$regex: /^Mad.*/}}, {_id:0, name:1, borough:1, "address.coord":1, cuisine:1}).pretty()